[{"/Users/jiah/Documents/react-lap/showMoim_front/src/index.js":"1","/Users/jiah/Documents/react-lap/showMoim_front/src/App.js":"2","/Users/jiah/Documents/react-lap/showMoim_front/src/reportWebVitals.js":"3","/Users/jiah/Documents/react-lap/showMoim_front/src/Login/SignUp.js":"4","/Users/jiah/Documents/react-lap/showMoim_front/src/Login/Login.js":"5","/Users/jiah/Documents/react-lap/showMoim_front/src/Main/Main.js":"6","/Users/jiah/Documents/react-lap/showMoim_front/src/Context/AuthContext.jsx":"7","/Users/jiah/Documents/react-lap/showMoim_front/src/Common/Modal.js":"8","/Users/jiah/Documents/react-lap/showMoim_front/src/Model/SignUpInfo.tsx":"9","/Users/jiah/Documents/react-lap/showMoim_front/src/Api/MemberApiService.jsx":"10","/Users/jiah/Documents/react-lap/showMoim_front/src/Api/ApiCilent.jsx":"11"},{"size":654,"mtime":1690092080865,"results":"12","hashOfConfig":"13"},{"size":862,"mtime":1690092080865,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1690092080866,"results":"15","hashOfConfig":"13"},{"size":7143,"mtime":1690092080865,"results":"16","hashOfConfig":"13"},{"size":5601,"mtime":1690092290628,"results":"17","hashOfConfig":"13"},{"size":345,"mtime":1690092080865,"results":"18","hashOfConfig":"13"},{"size":1774,"mtime":1690092080865,"results":"19","hashOfConfig":"13"},{"size":1665,"mtime":1690092203645,"results":"20","hashOfConfig":"13"},{"size":456,"mtime":1690092080865,"results":"21","hashOfConfig":"13"},{"size":512,"mtime":1690092080864,"results":"22","hashOfConfig":"13"},{"size":122,"mtime":1690092080864,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ff7com",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/jiah/Documents/react-lap/showMoim_front/src/index.js",[],[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/App.js",[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/reportWebVitals.js",[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Login/SignUp.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport \"../css/Login.css\";\n\nfunction SignUp() {\n  const authContext = useAuth()\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [email, setEmail] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [conPassword, setConPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const [emailRequested, setEmailRequested] = useState(false);\n  const [chkEmail, setChkEmail] = useState(false);\n  const [chkCode, setChkCode] = useState(false);\n  const [chkPassword, setChkPassword] = useState(false);\n  const [chkInfo, setChkInfo] = useState(false);\n\n  const authCode = \"123456\";\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //     console.log(\"useEffect\", conPassword)\n  // }, [conPassword])\n\n  const onEmailHandler = (e) => {\n    setEmail(e.currentTarget.value);\n  };\n\n  //인증 유효 시간 넣어야 될거같음\n  const onAuthHandler = (e) => {\n    \n    if(authContext.emailVerifyRequest(email)){\n      //이메일 요청 성공했을경우 \n      setEmailRequested(true);\n    }else{\n      //이메일 요청 실패, 모달창 띄우기\n    }\n  };\n\n  const onCodeHandler = (e) => {\n    setCode(e.currentTarget.value);\n    //인증 코드가 맞는지 여부 확인 필요\n    setChkCode(true); //일단은 임시로\n  };\n  const onPasswordHandler = (e) => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const onConPasswordHandler = (e) => {\n    setConPassword(e.currentTarget.value);\n  };\n\n  const onInfoHandler = (e) => {\n    setName(e.currentTarget.value);\n  };\n\n  async function checkValidEmail(code){\n    setCode(code)\n    return await authContext.emailVerify(email, code)\n  };\n\n  const checkValidPassword = (pwd, conPwd) => {\n    if (!pwd || !conPwd) return false;\n    if (pwd !== conPwd) return false;\n\n    return true;\n  };\n\n  async function onSignUp(){\n    if(await authContext.signUp(email, code,name, password, conPassword)){\n      navigate(\"/Login\");\n    }else{\n      console.log(\"회원가입 실패!!!\")\n    }\n  }\n\n  async function onEmailVerifyRequest(email : String){\n\n    if(await authContext.emailVerifyRequest(email)){\n      setChkEmail(true)\n    }\n\n  }\n  return (\n    <div className=\"bg-gray-10 flex items-center justify-center p-12\">\n        <div className=\"w-full flex flex-col \">\n          <h1 className=\"text-center text-2xl font-bold text-gray-600 mb-6\">\n            {searchParams.get(\"cmd\") === \"signup\" ? \"회원가입\" : \"비밀번호 재설정\"}\n          </h1>\n          {chkEmail == false && chkPassword == false && chkInfo == false && (\n            <div>\n                <div className=\"mb-6\">\n                    <div className=\"mb-1 text-sm text-gray-600 font-semibold\">이메일을 입력해주세요.</div>\n                    <input type=\"text\" onChange={onEmailHandler} value={email} className=\"w-3/4 py-2 px-4 bg-gray-100 rounded hover:ring-1 outline-sf-btn-bg mr-3\"/>\n                    <button onClick={onAuthHandler} disabled={email.length < 1} className=\"w-1/5 py-2.5 bg-sf-btn-bg rounded text-sm font-bold text-white hover:bg-sf-btn-bg disabled:bg-gray-300 disabled:text-gray-400\">번호 요청</button>\n                </div>\n                <div className=\"mb-3\">\n                    <div className=\"mb-1 text-sm text-gray-600 font-semibold\">인증코드를 입력해주세요.</div>\n                    <input type=\"text\" onChange={onCodeHandler} value={code} className=\"w-full py-2 px-4 bg-gray-100 rounded hover:ring-1 outline-sf-btn-bg\" />\n                </div>\n                <div className=\"mb-2 text-sm text-red-500\">{code.length > 0 && authCode != code ? \"인증번호가 일치하지 않습니다.\" : \"\\u00A0\"}</div>\n                <button onClick={() => { console.log(\"이메일 작성 완료\");\n                                        if (checkValidEmail(code)) {\n                                            setChkEmail(true);\n                                        }\n                                    }}\n                disabled={code.length < 6 || !emailRequested} className=\"py-4 bg-sf-btn-bg w-full rounded font-bold text-white hover:bg-sf-btn-bg disabled:bg-gray-300 disabled:text-gray-400\">다음</button>\n            </div>\n          )}\n          {chkEmail == true && chkPassword == false && chkInfo == false && (\n            <div>\n                <div className=\"mb-6\">\n                    <div className=\"mb-1 text-sm text-gray-600 font-semibold\">비밀번호를 입력해주세요.</div>\n                    <input type=\"password\" onChange={onPasswordHandler} value={password} className=\"w-full py-2 px-4 bg-gray-100 rounded hover:ring-1 outline-sf-btn-bg mr-3\"></input>\n                </div>\n                <div className=\"mb-3\">\n                    <div className=\"mb-1 text-sm text-gray-600 font-semibold\">비밀번호를 한 번 더 입력해주세요.</div>\n                    <input type=\"password\" onChange={onConPasswordHandler} value={conPassword} className=\"w-full py-2 px-4 bg-gray-100 rounded hover:ring-1 outline-sf-btn-bg mr-3\"></input>\n                </div>\n                <div className=\"mb-2 text-sm text-red-500\">{conPassword.length > 0 && password != conPassword ? \"비밀번호가 일치하지 않습니다.\" : \"\\u00A0\"}</div>\n                <button\n                onClick={() => {\n                  if (checkValidPassword(password, conPassword)) {\n                    console.log(\"비밀번호 작성 완료\");\n                    setChkPassword(true);\n                    onSignUp()\n                    if(searchParams.get(\"cmd\") === \"findpw\") {\n                        navigate(\"/Login\");\n                    }\n                  }\n                }}\n                disabled={!checkValidPassword(password, conPassword)} className=\"py-4 bg-sf-btn-bg w-full rounded font-bold text-white hover:bg-sf-btn-bg disabled:bg-gray-300 disabled:text-gray-400\">{searchParams.get(\"cmd\") === \"signup\" ? \"다음\" : \"완료\"}</button>\n            </div>\n          )}\n          {searchParams.get(\"cmd\") === \"signup\" && chkEmail == true && chkPassword == true && chkInfo == false && (\n            <div>\n                <div className=\"mb-3\">\n                    <div className=\"mb-1 text-sm text-gray-600 font-semibold\">이름을 입력해주세요.</div>\n                    <input type=\"text\" onChange={onInfoHandler} value={name} className=\"w-full py-2 px-4 bg-gray-100 rounded hover:ring-1 outline-sf-btn-bg mr-3\"></input>\n                </div>\n                <div className=\"mb-2 text-sm text-red-500\">&nbsp;</div>\n                <button\n                  onClick={() => {\n                    console.log(\"정보 작성 완료\");\n                    setChkInfo(true);\n                  }}\n                  disabled={name.length < 1} className=\"py-4 bg-sf-btn-bg w-full rounded font-bold text-white hover:bg-sf-btn-bg disabled:bg-gray-300 disabled:text-gray-400\" >완료</button>\n            </div>\n            )}\n        </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/jiah/Documents/react-lap/showMoim_front/src/Login/Login.js",["76","77","78","79"],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Main/Main.js",["80","81"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Main() {\n        \n\n    return (\n        <div className=\"bg-gray-10 \">\n            <div className=\"flex justify-center h-screen w-screen items-center\">\n                메인페이지 영역\n            </div>\n        </div>\n    )\n}\n\nexport default Main;","/Users/jiah/Documents/react-lap/showMoim_front/src/Context/AuthContext.jsx",[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Common/Modal.js",["82","83","84"],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Model/SignUpInfo.tsx",[],[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Api/MemberApiService.jsx",[],[],"/Users/jiah/Documents/react-lap/showMoim_front/src/Api/ApiCilent.jsx",[],[],{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":9,"column":24,"nodeType":"87","messageId":"88","endLine":9,"endColumn":39},{"ruleId":"85","severity":1,"message":"90","line":19,"column":10,"nodeType":"87","messageId":"88","endLine":19,"endColumn":17},{"ruleId":"85","severity":1,"message":"91","line":82,"column":18,"nodeType":"87","messageId":"88","endLine":82,"endColumn":38},{"ruleId":"92","severity":1,"message":"93","line":95,"column":21,"nodeType":"94","messageId":"95","endLine":95,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":95,"column":45,"nodeType":"94","messageId":"95","endLine":95,"endColumn":47},{"ruleId":"92","severity":1,"message":"93","line":95,"column":65,"nodeType":"94","messageId":"95","endLine":95,"endColumn":67},{"ruleId":"92","severity":1,"message":"96","line":106,"column":89,"nodeType":"94","messageId":"95","endLine":106,"endColumn":91},{"ruleId":"92","severity":1,"message":"93","line":115,"column":21,"nodeType":"94","messageId":"95","endLine":115,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":115,"column":44,"nodeType":"94","messageId":"95","endLine":115,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":115,"column":64,"nodeType":"94","messageId":"95","endLine":115,"endColumn":66},{"ruleId":"92","severity":1,"message":"96","line":125,"column":96,"nodeType":"94","messageId":"95","endLine":125,"endColumn":98},{"ruleId":"92","severity":1,"message":"93","line":140,"column":61,"nodeType":"94","messageId":"95","endLine":140,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":140,"column":84,"nodeType":"94","messageId":"95","endLine":140,"endColumn":86},{"ruleId":"92","severity":1,"message":"93","line":140,"column":103,"nodeType":"94","messageId":"95","endLine":140,"endColumn":105},{"ruleId":"92","severity":1,"message":"93","line":29,"column":18,"nodeType":"94","messageId":"95","endLine":29,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":33,"column":21,"nodeType":"94","messageId":"95","endLine":33,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":37,"column":18,"nodeType":"94","messageId":"95","endLine":37,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":37,"column":36,"nodeType":"94","messageId":"95","endLine":37,"endColumn":38},{"ruleId":"85","severity":1,"message":"97","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"98","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"99","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"100","line":6,"column":12,"nodeType":"87","messageId":"88","endLine":6,"endColumn":18},{"ruleId":"85","severity":1,"message":"101","line":6,"column":20,"nodeType":"87","messageId":"88","endLine":6,"endColumn":29},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setSearchParams' is assigned a value but never used.","'chkCode' is assigned a value but never used.","'onEmailVerifyRequest' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Link' is defined but never used.","'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used."]